package octahive:octabot@0.1.0;

interface plugin {
  variant plugin-result {
    action(action-data),
    task(task-data)
  }

  /// Action
  record action-data {
    /// The name of the action
    name: string,

    /// Action payload
    payload: string
  }

  /// Task
  record task-data {
    /// Task name
    name: string,

    /// Type of task
    kind: string,

    /// Project code
    project-code: string,

    /// External task id
    external-id: string,

    /// External task modified time
    external-modified-at: u32,

    /// Start task at
    start-at: u32,

    /// Task options
    options: string
  }

  /// The metadata for a plugin used for registration and setup
  record metadata {
    /// The friendly name of the plugin
    name: string,
    /// The version of the plugin
    version: string,
    /// The author of the plugin
    author: string,
    /// The description of the plugin. This will be used as the top level help text for the plugin
    description: string,
  }

  /// Errors related to interacting with Plugin
  variant error {
    // TODO: add other errors that make sense

    /// Parse bot config error
    parse-bot-config(string),

    /// Parse action payload error
    parse-action-payload(string),

    /// Send http request error
    send-http-request(string),

    /// Parse http response error
    parse-response(string),

    /// Open keyvalue storage error
    open-storage(string),

    /// Storage operation error
    storage-operation(string),

    /// Plugin config lock error
    config-lock(string),

    /// Some other error occurred.
    other(string)
  }

  load: func() -> metadata;

  init: func(config: string) -> result<_, error>;

  process: func(payload: string) -> result<list<plugin-result>, error>;
}

world octabot {
  // Imports
  import wasi:cli/environment@0.2.3;
  import wasi:cli/stdout@0.2.3;
  import wasi:cli/exit@0.2.3;
  import wasi:cli/stderr@0.2.3;
  import wasi:cli/stdin@0.2.3;
  import wasi:random/random@0.2.3;
  import wasi:logging/logging@0.1.0-draft;
  import wasi:clocks/monotonic-clock@0.2.3;
  import wasi:clocks/wall-clock@0.2.3;
  import wasi:filesystem/types@0.2.3;
  import wasi:filesystem/preopens@0.2.3;
  import wasi:http/outgoing-handler@0.2.3;
  import wasi:keyvalue/store@0.2.0-draft;

  // Exports
  export plugin;
}
